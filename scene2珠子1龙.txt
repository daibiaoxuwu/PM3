//双斜杠"//"和井号"#"都可以注释。
//以下打“*”号的是一定要有的信息，否则不必要有或者已有缺省信息。
background			#设置背景
	color= 0.1 0.1 0.1		//背景颜色					[缺省值(0,0,0)]
end				#结束设置背景

camera				#设置摄像机信息
	algorithm= PM			//使用的算法（RC/RT/PM/PPM/SPPM）		[缺省值PPM]
	O= 0 -8 2			//感光点的位置					[*]
	N= 0 1 -0.1			//摄像机的朝向					[*]
	image_H= 100			//bmp图像的象素高				[缺省值420]
	image_W= 100			//bmp图像的象素宽				[缺省值420]
	lens_H= 1			//摄像机镜头的高（与镜头到感光点距离之比）		[缺省值0.88]
	lens_W= 1			//摄像机镜头的宽					[缺省值0.88]
	shade_quality= 4		//计算面积光源光照的质量				[缺省值4]
	drefl_quality= 15		//计算镜面漫反射的质量				[缺省值4]
	max_hitpoints= 4000000		//光子图可容纳光子数				[缺省值4000000]
	iterations= 2000		//PPM迭代次数					[缺省值5000]
	reduction= 0.7			//PPM衰减系数					[缺省值0.7]
	max_photons= 1000000		//PM时最大光子数					[缺省值500000（PM时推荐值为1e7）]
	emit_photons= 1800000		//总发射光子数					[缺省值100000（PM时推荐值为1e7）]
	sample_photons= 500		//PM时碰撞点的采样光子数				[缺省值10（PM时推荐值为500）]
	sample_dist= 0.1		//采样时最大半径					[缺省值0.1]
end

light area			#设置一个矩形光源
	O= 0 0 6			//矩形光源的中心点				[*]
	Dx= 0.5 0 0			//矩形光源的x半轴				[*]
	Dy= 0 0.5 0			//矩形光源的y半轴				[*]
	color= 50 50 50			//光源的色光					[*]
end

primitive plane			#Floor
	N= 0 0 1
	R= 0
	color= 1 1 1			
	diff= 0.5
	refl= 0.3
	drefl= 0.15
	texture= floor.bmp
	Dx= 12 0 0
	Dy= 0 12 0
end

primitive polyhedron
	O= 0 2 1.42
	size= 4 4 4
	angles= 0 0 90
	mesh= dragon.obj
	diff= 0.6
	color= 0.5 1 0.5
end

primitive sphere		#设置一个球（一个大理石球）
	O= -2 -1 0.99
	R= 1
	color= 1 1 1
	texture= marble.bmp		//有纹理，设置纹理所在bmp文件			[*有纹理时必须]
	De= 0 0 1			//球的z轴					[缺省值(0,0,1)仅在有纹理时可选]
	Dc= 0 1 0			//球的极轴					[缺省值(0,1,0)仅在有纹理时可选]
	diff= 0.6			//漫反射百分比					[缺省值0]			
	spec= 0.1
	refl= 0.3
	drefl= 1			//蒙特卡罗算法计算镜面漫反射时反射光的偏差半径	[缺省值0，值为0时不使用该算法]
end

primitive sphere		#设置一个球（一个透明的玻璃球）
	O= 2.5 -1.2 0.84		//球形						[*]
	R= 1				//半径						[*]
	refr= 1				//折射所占百分比					[缺省值0]
	rindex= 1.7			//折射率						[*有折射时必须]
	absor= 1 2 3			//吸收色光的强度					[*有折射时必须]
end